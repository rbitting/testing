on:
  pull_request_target:
    paths:
      - '**.md'
  pull_request:
    types:
      - closed

# TODO: verify md files affected
jobs:
  # "Deploys" to dev environment
  #deploy-dev:
    #runs-on: 'ubuntu-latest'
    #environment: 'dev'
    #steps:
      #- run: echo "dev is deployed"

  # "Deploys" to staging environment
  deploy-qa:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: 'qa'
    #needs: [deploy-dev]
    steps:
    - name: Set Job Summary
      id: set_job_summary
      run: |
        URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
        FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
        echo "### QA deploy" >> $GITHUB_STEP_SUMMARY
        echo "## Files Updated" >> $GITHUB_STEP_SUMMARY
        for i in "${FILES[@]}"
        do
          echo $i >> $GITHUB_STEP_SUMMARY
        done
        echo "## Preview URLs" >> $GITHUB_STEP_SUMMARY
        echo "(URL path retrieved from dummy endpoint. This should print actual AEM preview URLs based on build of updated files above.)" >> $GITHUB_STEP_SUMMARY
        curl -X GET -s -S "https://raw.githubusercontent.com/rbitting/testing/master/test.json" | jq --raw-output '.url' >> $GITHUB_STEP_SUMMARY

  # "Deploys" to prod environment
  # In environment settings of repo, be sure that prod has reviewers assigned
  deploy-prod:
    runs-on: 'ubuntu-latest'
    environment: 'prod'
    needs: [deploy-qa] #[deploy-dev, deploy-qa]
    steps:
      - run: echo "### Prod deploy" >> $GITHUB_STEP_SUMMARY
